meta:
  complexity:
      - {title: "Wprowadzenie"}
      - {title: "Coś już tam trzeba wiedzieć"}
      - {title: "Rozpracowujemy niuanse"}
      - {title: "Expert - krew, pot i łzy"}
  sessiontype:
      - {title: "Warsztat", color: "#90be4e"}
      - {title: "Deep dive", color: "#03a9f4"}
      - {title: "Keynote", color: "#e91e63"}
list:
  -
    id: 1001
    title: "Przerwa kawowa"
    place: "Atom Club"
    service: true
    description: "Kawa, napoje oraz przekąski bądą także dostępne podczas przerw w sesjach (w połowie czasu trwania sesji)"
  -
    id: 1002
    title: "Przerwa lunchowa"
    place: "Atom Club"
    service: true
  -
    id: 1003
    title: "Meet & Greet"
    place: "T29"
    service: true
    description: "To ten moment gdy łapiesz piwo i rozmawiasz z uczestnikami, trenerami."
  -
    id: 9990
    title: "Keynote"
    place: "Atom Club"
    type: 2
    service: true
  -
    id: 9991
    title: "Sesja Deep Dive #1"
    place: ""
    type: 1
    service: true
  -
    id: 9992
    title: "Sesja Deep Dive #2"
    place: ""
    type: 1
    service: true
  -
    id: 9993
    title: "Sesja warsztatowa"
    place: "Skybox - loże biznesowe"
    type: 0
    service: true

  -
    id: 3
    title: "Co gryzie świadomego programistę DDD?"
    description: "W swojej pracy spotykając dziesiątki zespołów zauważam wzorce pytań/dylematów/rozterek jakie pojawiają wraz ze wzrostem doświadczenia i świadomości zespołu. Na pewnym poziomie zaawansowania wszyscy zadają te same pytania:

      - jak określić granicę agregatów?

      - jak opracować stabilne API?

      - czym kierować się przy modularyzacji?

      - a co ze smutnym CRUDem, którego też mamy?

      - dlaczego byznes nie chce z nami rozmawiać?

      - jak być partnerem a nie podwykonawcą?

      Tak na prawdę pytania te są ogólne a metodyki (jak np. DDD) jedynie szybciej do nich doprowadza. Podczas prezentacji przyjrzymy się tym typowym pytaniom na poziomie modelu, architektury i organizacji - spróbuję odpowiedzieć na nie w postaci konkretnych technik i rozwiązań."
    speakers: [5]
    type: 2

  -
    id: 1
    title: "JVM: przez dziurkę od klucza"
    description: "JVM to złożona maszyna, która napędza nasze systemy. Codziennie w pocie czoła przerzuca terabajty obiektów pomiędzy kolejnymi generacjami w GC, generuje strumienie optymalnego kodu skompilowanego przez jeden z kompilatorów JIT, w międzyczasie próbując dogadać się z systemem operacyjnym. Jednak nie zawsze w naszej maszynowni wszystko przebiega zgodnie z planem. Gdzie szukać informacji? Jak odczytywać i interpretować wartości metryk? Kiedy winny jest JVM, nasza aplikacja, a w jakim przypadku system operacyjny?

    Podczas tej sesji postaram się pokazać dostępne narzędzia, magiczne przełączniki i dostępne rozwiązania potrzebne w pracy każdego \"kryminologa\" JVM. Sesja będzie przeznaczona dla osób, które zaczynają przygodę z optymalizacją JVM. Porozmawiamy o zapisywaniu zdarzeń z JVM, narzędziach ukrytych w JDK,w tym także Java Mission Control i Flight Recorder i zobaczymy jak Java płonie :). Nie zapomnimy też o narzędziach dostępnych w systemie operacyjnym Linux."
    type: 1
    speakers: [3]
    complexity: 2

  # -
  #   id: 2
  #   title: "O optymalizacji MongoDB przykładów kilka"
  #   description: ""
  #   type: 0
  #   speakers: [4]
  #   complexity: 2

  -
    id: 4
    title: "Wprowadzenie do Domain-Drived Design na przykładach"
    description: "Przejdziemy przez przykład aplikacji DDD na podstawie, której wytłumaczę najważniejsze koncepty Domain-Drived Design oraz popularne techniki towarzyszące jak:
    <ul>
    <li>CQRS
    <li>CRUD segregation
    <li>Hexagonal Architecture
    <li>Knowledge Crunching
    <li>Event Storming
    <li>Domain Story
    <li>Ubiquitous language
    <li>Domain Model
    <li>Invariant
    <li>Aggregate
    <li>Domain Event
    <li>Value Object
    <li>Bounded Context
    <li>Context Map
    </ul>"
    type: 1
    speakers: [7]
    complexity: 1
  -
    id: 5
    title: "Sesja Event Storming-u"
    description: "Na sesji zapoznam was z notacją Event Storming-u, rolą warsztatów ES w procesie zwinnego wytwarzania oprogramowania oraz możliwymi zastosowaniami w waszej codziennej pracy.

    Zastosujemy Event Storming Big Picture, Design Level oraz przyjrzymy się relacji modelu ES z kodem źródłowym."
    type: 0
    speakers: [7]
    complexity: 1
  -
    id: 6
    title: "Docker - wstępniaczek"
    description: "Dzięki zastosowaniu dockera możemy w prosty sposób zapewnić izolację serwisów, zwiększając tym samym bezpieczeństwo i stabilność aplikacji. Podejście kontenerowe umożliwia nam sprawne i pełne odtworzenie środowisk produkcyjnych w każdym miejscu (nawet na swoim laptopie). Poznasz technologię, która rozwiąże większość problemów, jakie masz dzisiaj ze środowiskami dev/test i prod. W prosty i łatwy sposób będziesz w stanie dostarczać kolejne \"paczki\" z softem do klienta oraz co najważniejsze, będziesz miał pewność, że jak \"działa lokalnie to zadziała też na produkcji\" :)

    Trener ma ponad 3 letnie doświadczenie z dockerem, był odpowiedzialny za zdockeryzowanie aplikacji czasu rzeczywistego opartej na javie składającej się z kilkudziesięciu różnych kontenerów. Nie ma pytania z docker’a na które nie zna odpowiedzi.

    Podczas warsztatu poruszymy następujące kwestie:
    <ul>
    <li>Czym jest Docker
    <li>Tworzenie kontenerów
    <li>Zarządzanie kontenerami
    <li>Dokeryzowanie aplikacji
    <li>Zarządzanie obrazami Dockera
    <li>Budowanie skalowalnej aplikacji
    </ul>

    <b>Oczekiwany poziom:</b> Podstawowa wiedza z zakresu linuxa - poruszanie się po konsoli, instalowanie paczek itd. Doświadczenie z dockerem mile widziane, gwarantuje że poznasz go lepiej.

    <b>Co trzeba mieć na kompie:</b> zainstalowaną najnowszą wersję <a href=\"https://docs.docker.com/engine/installation/\"dockera (Community Edition)</a> i <a href=\"https://docs.docker.com/compose/install/\">docker-compose’a</a> - zlecany linux lub os x"
    type: 0
    speakers: [18]
    complexity: 0
  -
    id: 7
    title: "Uczenie maszynowe i jak budować systemy analizy sentymentu?"
    description: "W trakcie warsztatu pokażę dlaczego analiza sentymentu jest istotna nie tylko w biznesie, ale również wykorzystywana m.in. przez służby bezpieczeństwa. Zaprezentuję jak przygotować architekturę pod własny system i wykorzystamy algorytmy uczenia maszynowego."
    type: 1
    speakers: [21]
    complexity: 1
  -
    id: 8
    title: "Clojure Koans & REST assured"
    description: "<b>Clojure Koans</b>

    Nie znasz Clojure? Nie ma problemu! Przy użyciu prostych przykładów, rozwiązując praktyczne zadania polegające na naprawieniu testów jednostkowych nauczysz się języka krok po kroku. Zapraszam wszystkich, którzy chcą spróbować sił w programowaniu funkcyjnym i zobaczyć o co na prawdę chodzi z tymi \"nawiasami\".

    <b>REST assured</b>

    Zbudujmy coś praktycznego! Krok po kroku, małymi zmianami zbudujemy razem prostą aplikację, która będzie odpowiadać na http. Taki typowy przypadek użycia. Pozwoli to przećwiczyć wiedzę nabytą w pierwszej części warsztatu.

    Wymagania przed warsztatem: laptop z nowożytna przeglądarka internetową"
    type: 0
    speakers: [13]
    complexity: 0

  -
    id: 9
    title: "Jak przygotować swoją pierwszą prezentację (lub ulepszyć istniejące)?"
    description: "Jeżeli nosisz w sobie kawałek wartościowej wiedzy ale zastanawiasz się jak ją \"sformatować\" w formę ciekawej prezentacji to zapraszam na mój warsztat.

    Zajmiemy się jednym z kilku aspektów wystąpienia: przygotowaniem treści.

    Podczas warsztatu będziemy ćwiczyć sprawdzone techniki:

    - nawiązanie połączenia z odbiorcami poprzez role i problemy

    - prowadzenia osi narracji poprzez pytania jakie stawiają sobie odbiorcy

    - używanie \"włączającego\" języka i trybu dialogu

    - kilka wzorców tworzenia prezentacji: ADEPT, Context-problem-questions-solutions, triada, łuk narracyjny, metaprogramy"
    type: 0
    speakers: [5]
    complexity: 0
  -
    id: 10
    title: "JMX w praktyce"
    type: 0
    speakers: [22]
    complexity: 1

  -
    id: 11
    title: "Zawładnij (hiper)tekstem, czyli jak zbudować wyszukiwarkę?"
    description: "Przeszukiwanie tekstu zagościło na dobre we współczesnych aplikacjach internetowych. Czy zastanawiałeś się, jak to właściwie działa? Może chciałbyś stworzyć własną wyszukiwarkę, obsługującą różnorodne formy danych wejściowych?

    Poznaj Lucene - silnik wyszukiwania leżący u podstaw popularnych rozwiązań, takich jak Elasticsearch, Opengrok, czy Apache Solr. Dowiedz się, jak zbudowany jest indeks wyszukiwarki i jak sprawić, aby użytkownik szybko znalazł interesujące go dane. W ramach warsztatu zobaczysz, jak sprowadzić tekst do postaci, którą można efektywnie przeszukiwać. Nauczysz się także stosować Lucene w praktyce, krok po kroku budując własną, coraz bardziej wyrafinowaną wyszukiwarkę.

    Wymagany laptop i podstawowa znajomość Javy."
    type: 0
    speakers: [16, 23]
    complexity: 0
  -
    id: 12
    title: "Speed-up code evaluation by jit compilation"
    type: 0
    speakers: [24, 25]
    complexity: 3

  -
    id: 13
    title: "ElasticSearch: wydajnościowe pułapki?"
    type: 1
    speakers: [26]
    complexity: 2

  -
    id: 14
    title: "Wydajność bazy danych z perspektywy programisty"
    description: "Na warsztacie pokażemy, co dzieje się \"na zapleczu\" relacyjnej bazy danych, kiedy wykonujemy codzienne czynności i odpowiemy na odwieczne pytanie \"dlaczego tak wolno?\".

    Zaczynając od wnioskowania o samych danych, przejdziemy stopniowo do architektury bazy i typowych nieporozumień między bazą a programistą (n+1 query problem, normalizacja-denormalizacja, zarządzanie połączeniami). Po skończonym laboratorium każdy z uczestników powinien czuć się pewnie diagnozując własne problemy z bazą.

    W czasie warsztatu będziemy korzystać z przygotowanego przez nas Microsoft SQL Servera, natomiast poruszane tematy są niezależne od silnika bazy danych.

    wymagania przed warsztatem: laptop min 8 GB RAM (najlepiej 16GB), dowolny OS, zainstalowany VirtualBox, Java JDK8 albo Java JDK9"
    type: 0
    speakers: [27]
    complexity: 2

  -
    id: 15
    title: "Java Mission Control + Flight Recorder — diagnozowanie problemów wydajnościowych na produkcji"
    type: 0
    speakers: [28, 29]
    complexity: 1

  -
    id: 16
    title: "Introduction to Kotlin"
    description: "Jeśli coraz częściej słyszysz o Kotlinie, ale dotąd nie miałeś(-aś) czasu bliżej się z nim zapoznać, to te warsztaty są właśnie dla Ciebie :)

    Zapraszam na piękną przygodę poznawania języka, który czerpie pełnymi garściami z doświadczeń swoich wielkich poprzedników - Java, C#, Groovy, JavaScript, Scala, Swift - biorąc z nich to, co najlepsze, a odrzucając to, co słabe.

    Najpierw omówimy założenia języka i motywy jakie przyświecały jego twórcom (JetBrains). A potem włączymy IntelliJ i zaczniemy się bawić :) Serio - niektóre rozwiązania są tak genialne, że wywołują niekontrolowany uśmiech na twarzy :) Przećwiczymy najważniejsze elementy składni języka i jego najciekawsze funkcjonalności, rozwiązując przy tym sporo praktycznych zadań.

    Wymagania względem uczestników:

      - Żadna wiedza o Kotlinie nie jest wymagana (warsztaty będą od samych podstaw)

      - Przyda się znajomość Javy (będzie sporo porównań Kotlin vs Java)

      - Przynosimy laptopy z zainstalowanym IntelliJ IDEA (może być darmowa wersja Community)"
    type: 0
    speakers: [8]
    complexity: 1

  -
    id: 17
    title: "JUnit5"
    description: "To praktyczny warsztat adresowane jest  do programistów Java, chcących poznać najnowszą wersję frameworka do tworzenia testów jednostkowych - Junit 5.
    JUnit 5 to całkowicie nowy projekt, oferujący wiele ciekawych funkcjonalności takich jak m.in. całkowite wsparcie dla Javy w wersji 8, wstrzykiwanie parametrów, testy parametryzowane czy w końcu nowe i API umożliwiające łatwiejsze niż kiedykolwiek rozszerzanie możliwości frameworka i dostosowanie go do potrzeb projektowych .
    JUnit 5 daje całkowicie nowe możliwości pisania testów. Na szkoleniu poznasz podstawy Junit 5 jak również sposoby integracji z popularnymi bibliotekami takimi jak Mockito,  AssertJ czy RESTAssured. Poznasz również możliwości wykorzystania frameworku w tworzeniu testów integracyjnych dla aplikacji opartych o Spring Boot i Spring Framework.

    <figure>
    <figcaption>Zakres:</figcaption>
      <ul>
      <li>Gradle i Maven oraz wsparcie IDE
      <li>Junit 5 - wprowadzenie
      <li>Asersje oraz integracja z AssertJ
      <li>Testowanie wyjątków
      <li>Testy parametryzowane
      <li>Mockito
      <li>Spring / Spring Boot
      <li>REST Assured
      <li>Extension API
      </ul></figure>"
    type: 0
    speakers: [30, 31]
    complexity: 0

  -
    id: 18
    title: "Wprowadzenie do Scali"
    description: "Java 10 tuż tuż i już nikogo nie będzie dziwić zapis var s=”hello”. Alternatywne języki JVM wpływają na to jak rozwija się sama Java i chciałbym was zachęcić do poznania mechanizmów w tychże językach zanim wszystko trafi do mainstreamu.

    Ponieważ Java przyzwyczaiła nas do podejścia obiektowego to i od tego zaczniemy nasza naukę. Zobaczymy, że Scala jest tak naprawde bardziej obiektowa niż Java a także i wprowadza wiele ciekawych mechanizmów, które sprawdziły się na tyle, że również pojawiają się w Kotlinie.

    W dalszej części - w zależności od tego co będzie chciała robić publiczność - możemy pójść dalej w system typów lub skupić się na funkcjach.

    Nie trzeba znać Scali, trzeba trochę znać Javę.

    <figure><figcaption>Przed warsztatem warto przygotować środowisko:</figcaption>
      <ol>
      <li>Wyciągnijcie kod : https://github.com/PawelWlodarski/workshops
      <li>Zainstalujcie https://www.jetbrains.com/idea/ community edition (bezpłatne) i później w opcjach zainstalujcie plugin do scali.
      <li>Zaimportujcie projekt (ten z wyciągniętego kodu) do IDE.
      <li>Otwórzcie klaskę \"TestingJavaClassAnswer\" (2 razy Shift otwiera okno wyszukiwania) i odpalcie (ctrl+Shift+F10). Powinien pojawić się zielony pasek.
      </ol></figure>
      Kto chętny może zapoznać się z teorią : https://pawelwlodarski.gitbooks.io/workshops/content/"
    type: 0
    speakers: [15]
    complexity: 0

  -
    id: 19
    title: "Kubernetes od podstaw"
    description: "W świecie systemów rozproszonych, mikrousług, zdarzeń programiście nie wystarczy już tylko wiedzieć jak napisać i zbudować kod źródłowy. W świecie, w którym system podzielony jest na kilka, kilkanaście, kilkadziesiąt lub kilkaset modułów przychodzi taki moment w którym potrzebujemy skomunikować się z innymi komponentami.

    W tym samym świecie systemy produkcyjnie uruchamiamy w chmurze. I wszystko ładnie, pięknie, ale jak tutaj prowadzić development? Czy każdy programista powinien mieć swoją chmurę na którą będzie w stanie wrzucić swoje \"dziecko w trakcie aktu tworzenia\"? Czy musimy uruchamiać wszystko? Co z kosztem? W takim razie może powinienem uruchamiać swoją lokalną instancję poza chmurą? Ale czy wtedy nie istnieje ryzyko, że inny sposób wdrożenia podczas developmentu spowoduje problemy na środowiskach produkcyjnych?

    A może by tak dało się prościej? Może da się tworzyć w oparciu o takie same podejście do wdrożeń na lokalnej maszynie programisty z możliwością wybrania, które elementy faktycznie powinny zostać uruchomione? Może development mógłby działać podobnie do produkcji i gwarantować taki sam sposób wdrożenia?

    Chciałbym Wam pokazać jedną z alternatyw- podejście które jest wygodne zarówno od strony OPSów jak i programistów, podejście, które potrafi bardzo przyspieszyć i ułatwić development. Podejście, które pozwoli nam (programistom) i administratorom wejść w świat kultury devops i naprawdę lepiej rozumieć siebie nawzajem.

    <figure><figcaption>W ramach warsztatów:</figcaption>
    <ul>
    <li>Skonfigurujesz poprawnie lokalne środowisko pracy z kubernetesem
    <li>Na podstawie przygotowanych i udostępnionych obrazów dockera przykładowych aplikacji wdrożysz własne moduły na kilka różnych sposobów wraz z wyróżnieniem wad i zalet każdego z podejść
    <li>Opracujesz automatyczny restart aplikacji na wypadek problemów i zobaczysz jak działa to w praktyce
    <li>Skonfigurujesz na potrzeby developmentu bazy danych i inne usługi serwisowe
    <li>Zdefiniujesz automatyczne skalowanie aplikacji
    <li>Przeprowadzisz rolling-release przykładowej aplikacji gwarantując tzw. \"zero-downtime\"
    <li>Dowiesz się jak rekonfigurować aplikację za pomocą config map
    <li>Zabezpieczysz hasła i klucze do baz danych
    </ul></figure>

    Wszystko to pozwoli Ci swobodnie pracować i przygotowywać konfiguracje aplikacji za które administratorzy Cię pokochają :)

    <figure><figcaption>Wymagania</figcaption>
    <ul>
    <li>Komputer z minimum 8GB pamięci (mocno zalecane 12GB) i procesor z minimum dwoma core'ami
    <li>Skonfigurowany i zainstalowany docker
    <li>Podstawowa znajomość komend dockera (pobieranie obrazów z dockerhub, budowanie obrazów). Znajomość przygotowywania plików dockera może pomóc, ale nie jest konieczna.
    <li>Zainstalowany edytor tekstu
    <li>Konsola użytkownika i podstawowa umiejętność jej obsługi w swoim systemie operacyjnym
    </ul></figure>"
    type: 0
    speakers: [9]
    complexity: 0

  -
    id: 20
    title: "Testowanie wydajności kodu Javy za pomocą narzędzia JMH."
    description: "Testowanie wydajności kodu. A co w tym trudnego? Wystarczy System.currentTimeMillis() przed i po wywołaniu metody i po kłopocie. Przecież sam Bruce Eckel tak robił. Okazuje że można przy okazji popełnić wiele typowych błędów, które mogą spowodować, że nasze szacowania będą bezużyteczne. W ramach sesji warsztatowej wykorzystamy narzędzie JMH do testowania naszych kawałków kodu i zobaczymy jak pomoże nam ono tych błędów uniknąć. Przy okazji poznamy też triki JIT-compilera, którymi sprawia, że java potrafi działać naprawdę szybko ale przy okazji czyni pisanie microbenchmarków zadaniem nie tak trywialnym jakby się mogło na pierwszy rzut oka wydawać.

    Uczestnicy powinni umieć programować w Javie.

    <figure><figcaption>Środowisko:</figcaption>
    Dowolne IDE do Javy plus maven, GIT, podłączenie do internetu.
    </figure>"
    type: 0
    speakers: [11]
    complexity: 1
