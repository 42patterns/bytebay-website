meta:
  complexity:
      - {title: "Wprowadzenie"}
      - {title: "Coś już tam trzeba wiedzieć"}
      - {title: "Rozpracowujemy niuanse"}
      - {title: "Expert - krew, pot i łzy"}
  sessiontype:
      - {title: "Warsztat", color: "#90be4e"}
      - {title: "Deep dive", color: "#03a9f4"}
      - {title: "Keynote", color: "#e91e63"}
list:
  -
    id: 1001
    title: "Przerwa kawowa"
    place: "I piętro - Atom Club"
    service: true
    description: "Kawa, napoje oraz przekąski bądą także dostępne podczas przerw w sesjach (w połowie czasu trwania sesji)"
  -
    id: 1002
    title: "Przerwa lunchowa"
    place: "I piętro - Atom Club"
    service: true
  -
    id: 1003
    title: "Meet & Greet"
    place: "I piętro - Atom Club"
    service: true
    description: "To ten moment gdy łapiesz piwo i rozmawiasz z uczestnikami, trenerami."
  -
    id: 9990
    title: "Keynote"
    place: "Atom Club"
    service: true
  -
    id: 9991
    title: "Sesje warsztatowe"
    place: "Atom Club"
    service: true

  -
    id: 003
    title: "Co gryzie świadomego programistę DDD?"
    description: "W swojej pracy spotykając dziesiątki zespołów zauważam wzorce pytań/dylematów/rozterek jakie pojawiają wraz ze wzrostem doświadczenia i świadomości zespołu. Na pewnym poziomie zaawansowania wszyscy zadają te same pytania:

      - jak określić granicę agregatów?

      - jak opracować stabilne API?

      - czym kierować się przy modularyzacji?

      - a co ze smutnym CRUDem, którego też mamy?

      - dlaczego byznes nie chce z nami rozmawiać?

      - jak być partnerem a nie podwykonawcą?

      Tak na prawdę pytania te są ogólne a metodyki (jak np. DDD) jedynie szybciej do nich doprowadza. Podczas prezentacji przyjrzymy się tym typowym pytaniom na poziomie modelu, architektury i organizacji - spróbuję odpowiedzieć na nie w postaci konkretnych technik i rozwiązań."
    speakers: [5]
    subtype: 2

  -
    id: 001
    title: "JVM: przez dziurkę od klucza"
    description: "JVM to złożona maszyna, która napędza nasze systemy. Codziennie w pocie czoła przerzuca terabajty obiektów pomiędzy kolejnymi generacjami w GC, generuje strumienie optymalnego kodu skompilowanego przez jeden z kompilatorów JIT, w międzyczasie próbując dogadać się z systemem operacyjnym. Jednak nie zawsze w naszej maszynowni wszystko przebiega zgodnie z planem. Gdzie szukać informacji? Jak odczytywać i interpretować wartości metryk? Kiedy winny jest JVM, nasza aplikacja, a w jakim przypadku system operacyjny?

    Podczas tej sesji postaram się pokazać dostępne narzędzia, magiczne przełączniki i dostępne rozwiązania potrzebne w pracy każdego \"kryminologa\" JVM. Sesja będzie przeznaczona dla osób, które zaczynają przygodę z optymalizacją JVM. Porozmawiamy o zapisywaniu zdarzeń z JVM, narzędziach ukrytych w JDK,w tym także Java Mission Control i Flight Recorder i zobaczymy jak Java płonie :). Nie zapomnimy też o narzędziach dostępnych w systemie operacyjnym Linux."
    subtype: 1
    speakers: [3]
    complexity: 2

  # -
  #   id: 002
  #   title: "O optymalizacji MongoDB przykładów kilka"
  #   description: ""
  #   subtype: 0
  #   speakers: [4]
  #   complexity: 2

  -
    id: 004
    title: "Wprowadzenie do Domain-Drived Design na przykładach"
    description: "Przejdziemy przez przykład aplikacji DDD na podstawie, której wytłumaczę najważniejsze koncepty Domain-Drived Design oraz popularne techniki towarzyszące jak:
    <ul>
    <li>CQRS
    <li>CRUD segregation
    <li>Hexagonal Architecture
    <li>Knowledge Crunching
    <li>Event Storming
    <li>Domain Story
    <li>Ubiquitous language
    <li>Domain Model
    <li>Invariant
    <li>Aggregate
    <li>Domain Event
    <li>Value Object
    <li>Bounded Context
    <li>Context Map
    </ul>"
    subtype: 1
    speakers: [7]
    complexity: 1
  -
    id: 005
    title: "Sesja Event Storming-u"
    description: "Na sesji zapoznam was z notacją Event Storming-u, rolą warsztatów ES w procesie zwinnego wytwarzania oprogramowania oraz możliwymi zastosowaniami w waszej codziennej pracy.

    Zastosujemy Event Storming Big Picture, Design Level oraz przyjrzymy się relacji modelu ES z kodem źródłowym."
    subtype: 0
    speakers: [7]
    complexity: 1
  -
    id: 006
    title: "Docker - wstępniaczek"
    description: "Dzięki zastosowaniu dockera możemy w prosty sposób zapewnić izolację serwisów, zwiększając tym samym bezpieczeństwo i stabilność aplikacji. Podejście kontenerowe umożliwia nam sprawne i pełne odtworzenie środowisk produkcyjnych w każdym miejscu (nawet na swoim laptopie). Poznasz technologię, która rozwiąże większość problemów, jakie masz dzisiaj ze środowiskami dev/test i prod. W prosty i łatwy sposób będziesz w stanie dostarczać kolejne \"paczki\" z softem do klienta oraz co najważniejsze, będziesz miał pewność, że jak \"działa lokalnie to zadziała też na produkcji\" :)

    Trener ma ponad 3 letnie doświadczenie z dockerem, był odpowiedzialny za zdockeryzowanie aplikacji czasu rzeczywistego opartej na javie składającej się z kilkudziesięciu różnych kontenerów. Nie ma pytania z docker’a na które nie zna odpowiedzi.

    Podczas warsztatu poruszymy następujące kwestie:
    <ul>
    <li>Czym jest Docker
    <li>Tworzenie kontenerów
    <li>Zarządzanie kontenerami
    <li>Dokeryzowanie aplikacji
    <li>Zarządzanie obrazami Dockera
    <li>Budowanie skalowalnej aplikacji
    </ul>

    <b>Oczekiwany poziom:</b> Podstawowa wiedza z zakresu linuxa - poruszanie się po konsoli, instalowanie paczek itd. Doświadczenie z dockerem mile widziane, gwarantuje że poznasz go lepiej.

    <b>Co trzeba mieć na kompie:</b> zainstalowaną najnowszą wersję <a href=\"https://docs.docker.com/engine/installation/\"dockera (Community Edition)</a> i <a href=\"https://docs.docker.com/compose/install/\">docker-compose’a</a> - zlecany linux lub os x"
    subtype: 0
    speakers: [18]
    complexity: 0
  -
    id: 007
    title: "Uczenie maszynowe i jak budować systemy analizy sentymentu?"
    description: "W trakcie warsztatu pokażę dlaczego analiza sentymentu jest istotna nie tylko w biznesie, ale również wykorzystywana m.in. przez służby bezpieczeństwa. Zaprezentuję jak przygotować architekturę pod własny system i wykorzystamy algorytmy uczenia maszynowego."
    subtype: 1
    speakers: [21]
    complexity: 1
  -
    id: 008
    title: "Clojure Koans & REST assured"
    description: "<b>Clojure Koans</b>

    Nie znasz Clojure? Nie ma problemu! Przy użyciu prostych przykładów, rozwiązując praktyczne zadania polegające na naprawieniu testów jednostkowych nauczysz się języka krok po kroku. Zapraszam wszystkich, którzy chcą spróbować sił w programowaniu funkcyjnym i zobaczyć o co na prawdę chodzi z tymi \"nawiasami\".

    <b>REST assured</b>

    Zbudujmy coś praktycznego! Krok po kroku, małymi zmianami zbudujemy razem prostą aplikację, która będzie odpowiadać na http. Taki typowy przypadek użycia. Pozwoli to przećwiczyć wiedzę nabytą w pierwszej części warsztatu.

    Wymagania przed warsztatem: laptop z nowożytna przeglądarka internetową"
    subtype: 0
    speakers: [13]
    complexity: 0

  -
    id: 009
    title: "Jak przygotować swoją pierwszą prezentację (lub ulepszyć istniejące)?"
    description: "Jeżeli nosisz w sobie kawałek wartościowej wiedzy ale zastanawiasz się jak ją \"sformatować\" w formę ciekawej prezentacji to zapraszam na mój warsztat.

    Zajmiemy się jednym z kilku aspektów wystąpienia: przygotowaniem treści.

    Podczas warsztatu będziemy ćwiczyć sprawdzone techniki:

    - nawiązanie połączenia z odbiorcami poprzez role i problemy

    - prowadzenia osi narracji poprzez pytania jakie stawiają sobie odbiorcy

    - używanie \"włączającego\" języka i trybu dialogu

    - kilka wzorców tworzenia prezentacji: ADEPT, Context-problem-questions-solutions, triada, łuk narracyjny, metaprogramy"
    subtype: 0
    speakers: [5]
    complexity: 0
  -
    id: 010
    title: "JMX w praktyce"
    subtype: 0
    speakers: [22]
    complexity: 1

  -
    id: 11
    title: "Zawładnij (hiper)tekstem, czyli jak zbudować wyszukiwarkę?"
    description: "Przeszukiwanie tekstu zagościło na dobre we współczesnych aplikacjach internetowych. Czy zastanawiałeś się, jak to właściwie działa? Może chciałbyś stworzyć własną wyszukiwarkę, obsługującą różnorodne formy danych wejściowych?

    Poznaj Lucene - silnik wyszukiwania leżący u podstaw popularnych rozwiązań, takich jak Elasticsearch, Opengrok, czy Apache Solr. Dowiedz się, jak zbudowany jest indeks wyszukiwarki i jak sprawić, aby użytkownik szybko znalazł interesujące go dane. W ramach warsztatu zobaczysz, jak sprowadzić tekst do postaci, którą można efektywnie przeszukiwać. Nauczysz się także stosować Lucene w praktyce, krok po kroku budując własną, coraz bardziej wyrafinowaną wyszukiwarkę.

    Wymagany laptop i podstawowa znajomość Javy."
    subtype: 0
    speakers: [16, 23]
    complexity: 0
  -
    id: 12
    title: "Speed-up code evaluation by jit compilation"
    subtype: 0
    speakers: [24, 25]
    complexity: 3

  -
    id: 13
    title: "ElasticSearch: wydajnościowe pułapki?"
    subtype: 1
    speakers: [26]
    complexity: 2

  -
    id: 14
    title: "Wydajność bazy danych z perspektywy programisty"
    description: "Na warsztacie pokażemy, co dzieje się \"na zapleczu\" relacyjnej bazy danych, kiedy wykonujemy codzienne czynności i odpowiemy na odwieczne pytanie \"dlaczego tak wolno?\".

    Zaczynając od wnioskowania o samych danych, przejdziemy stopniowo do architektury bazy i typowych nieporozumień między bazą a programistą (n+1 query problem, normalizacja-denormalizacja, zarządzanie połączeniami). Po skończonym laboratorium każdy z uczestników powinien czuć się pewnie diagnozując własne problemy z bazą.

    W czasie warsztatu będziemy korzystać z przygotowanego przez nas Microsoft SQL Servera, natomiast poruszane tematy są niezależne od silnika bazy danych.

    wymagania przed warsztatem: laptop min 8 GB RAM (najlepiej 16GB), dowolny OS, zainstalowany VirtualBox, Java JDK8 albo Java JDK9"
    subtype: 0
    speakers: [27]
    complexity: 2

  -
    id: 15
    title: "Java Mission Control + Flight Recorder — diagnozowanie problemów wydajnościowych na produkcji"
    subtype: 0
    speakers: [28, 29]
    complexity: 1
